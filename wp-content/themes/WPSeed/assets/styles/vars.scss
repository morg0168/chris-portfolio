 /**
  * Variables
  * Contains re-usable variables like colors, sizes, breakpoints etc.
  * Normally, you don't have to change anything in essentials.css and general.css
  * because you'll define the basic-values here.
  *
  * @author     Flurin Dürst
  * @version    1.8.0
  * @since      WPSeed 0.1
  *
  */


/*==================================================================================
  SCALING
==================================================================================*/

$base_size:                   2vw;                // scales all `rem` based elements by adding this value as html font-size
$breakpoint:                  800px;              // breakpoint between @desktop and @mobile mixins
$scaling_endpoint:            1200px;             // scaling of all `rem` based elements stops here
$base_size_mobile:            $base_size * 2.2;   // scaling multiplicator for mobile viewport



/*==================================================================================
  COLORS
==================================================================================*/

/* Presets
/––––––––––––––––––––––––*/
$color__dark:                 #333333;
$color__bright:               #f7f7f2;
$color__grey:                 #b5b5b1;
$color__green:                #97c475;
$color__black:                #000000;
$color__white:                #ffffff;
$default__color__link:         pink;




/*==================================================================================
  DEFAULTS
==================================================================================*/
// these basic defaults are applied to the 'html', 'body', 'nav' or 'a' tags

/* HTML
/––––––––––––––––––––––––*/
$html__fontname:              'courier_newregular', serif; // Normal 400, Medium 500, Bold 700
$html__bgcolor:                $color__bright;
$html__textcolor:              $color__dark;

/* BODY
/––––––––––––––––––––––––*/
$body__fontsize:              1rem;
$body__fontweight:            400;
$body__lineheight:            1.3;

/* NAV
/––––––––––––––––––––––––*/
$nav__linkcolor:              $color__grey;
$nav__hovercolor:             $color__green;
$nav__activecolor:            $color__dark;
$nav__spacercolor:            $color__grey;

/* ANCHORS
/––––––––––––––––––––––––*/
$a__linkcolor:                $color__dark;
$a__hovercolor:               $color__dark;
$a__textdecoration:           'none';



/*==================================================================================
  TRANSITIONS
==================================================================================*/

$transition_fast:            .3s;
$transition_slow:            .7s;



/*==================================================================================
  SHADOWS
==================================================================================*/

$shadow:                      0 2px 5px 0 rgba(0, 0, 0, 0.16),    0 2px 10px 0 rgba(0, 0, 0, .12);
$shadow__soft:                0 1px 2px 0 rgba(0, 0, 0, 0.08),    0 1px 5px 0 rgba(0, 0, 0, 0.06);


/*==================================================================================
  1.0 RESPONSIVE MIXINS
==================================================================================*/
// contains styles & mixins for responsive/fluid usage


/* BY BREAKPOINTS
/––––––––––––––––––––––––*/
// breakpoint-width defined in vars.scss
@mixin desktop {
  @media (min-width: #{$breakpoint}) {
    @content;
  }
}
@mixin mobile {
  @media (max-width: #{$breakpoint - 1px}) {
    @content;
  }
}


/* BY PIXELS
/––––––––––––––––––––––––*/
// usage example:  { ... }
@mixin vpw_min($min) {
    @media (min-width: #{$min}) { @content; }
}
@mixin vpw_max($max) {
    @media (max-width: #{$max}) { @content; }
}
@mixin vpw($min: 0px, $max: 0px) {
    @media (min-width: #{$min}) and (max-width: #{$max}) { @content; }
}


/* BY ASPECT RATIO
/––––––––––––––––––––––––*/
// usage example: asr_min(16,9) { ... }
@mixin asr_min($width: 16, $height: 9) {
    @media (min-aspect-ratio:  #{$width} / #{$height}) { @content; }
}
@mixin asr_max($width: 16, $height: 9) {
    @media (max-aspect-ratio:  #{$width} / #{$height}) { @content; }
}


/* BY CLASS
/––––––––––––––––––––––––*/
.mobile {
  @include desktop {
    display: none;
  }
}
.desktop {
  @include mobile {
    display: none;
  }
}



/*==================================================================================
  2.0 GENERAL SASS-FUNCTIONS
==================================================================================*/


/* STRIP UNIT
/––––––––––––––––––––––––*/
// removes a unit from a variable
@function stripunit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }
  @return $number;
}
